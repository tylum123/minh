const VALUES = [
    {id:"scissors", value: "‚úåüèª"}, //0
    {id:"rock", value: "‚úäüèª"}, //1
    {id:"paper", value: "üñêüèª"}, //2
];

// ph√¢n t√≠ch logic
//mu·ªën code game th√¨ ph·∫£i t√¨m hi·ªÉu quy lu·∫≠t c·ªßa game
//khi n√†o th√¨ th·∫Øng
//th·∫Øng: 0 - 2 = -2
//       1 - 0 = 1
//       2 - 1 = 1
//indexPlayer - indexComputer = -2 || 1 => win return 1
//indexPlayer - indexComputer = 0 ||   => draw return 0
//else                           ||   => lose return -1

let i = 0;
const handleChange = () => {
    let computer = document.querySelector("#computer");
    computer.textContent = VALUES[i].value;
    computer.setAttribute("data-id", VALUES[i].id);
    // if(i === VALUES.length - 1) i = 0;
    // else i++;s
    i = i === VALUES.length - 1 ? i = 0 : ++i;
};

let interval = setInterval(handleChange, 100); //gi·ªëng setTimeOut nh∆∞ng ch·∫°y m√£i m√£i

// h√†m so s√°nh gi√° tr·ªã ph√¢n th·∫Øng:1 h√≤a:0 thua:-1
const compare = (valuePlayer, valueComputer) => {
    //t√¨m index c·ªßa c√°c value t∆∞∆°ng ·ª©ng 
    let indexPlayer = VALUES.findIndex((item) => item.id == valuePlayer); //l·∫•y index c·ªßa value player
    let indexComputer = VALUES.findIndex((_item) => _item.id == valueComputer); //l·∫•y index c·ªßa value computer
    let result = indexPlayer - indexComputer;
    
    if([-2, 1].includes(result)) return 1;
    else if(result == 0) return 0;
    else return -1;
}

let playerItem = document.querySelectorAll(".user");
playerItem.forEach((item) => {
    //cho t·∫•t c·∫£ b·ªçn n√≥ ƒë·ªÅu l·∫Øng nghe s·ª± ki·ªán click
    item.addEventListener("click", (event)=>{
        //d·ª´ng m√°y l·∫°i v√† l·∫•y data-id
        clearInterval(interval);
        let valueComputer = document.querySelector("#computer").dataset.id; //getAttribute("data-id"); x√†i dataset.id ch·ªâ duy nh·∫•t thay th·∫ø cho data-id

        //l·∫•y id c·ªßa th·∫±ng v·ª´a nh·∫•n
        let valuePlayer = event.target.id;
        
        //so s√°nh l·∫•y k·∫øt qu·∫£
        let result = compare(valuePlayer, valueComputer);

        //duy·ªát c√°c n√∫t v√† x√≥a actived
        playerItem.forEach((_item) => { 
            _item.classList.remove("actived");
            _item.style.pointerEvents = "none";//kh·ªëng ch·∫ø ko cho ng∆∞·ªùi d√πng ch·ªçn 
        });

        //th√™m active cho n√∫t v·ª´a nh·∫•n
        event.target.classList.add("actived");

        //k·∫øt lu·∫≠n
        let alertDiv = document.createElement("div");
        alertDiv.classList.add("alert");
        let msg = "";
        if(result == 1){
            msg = "B·∫°n Th·∫Øng";
            alertDiv.classList.add("alert-success");
        }else if(result == 0){
            msg = "B·∫°n H√≤a";
            alertDiv.classList.add("alert-warning");
        }else {
            msg = "B·∫°n Thua";
            alertDiv.classList.add("alert-dark");
        }
        alertDiv.textContent = msg;
        document.querySelector(".notification").appendChild(alertDiv);

        //hi·ªán n√∫t ch∆°i l·∫°i
        document.querySelector("#play-again").classList.remove("d-none");

    });
});

//s·ª± ki·ªán click ch∆°i l·∫°i
document.querySelector(".btn-play-again").addEventListener("click",(event) => {
    clearInterval(interval); //
    interval = setInterval(handleChange, 100);

    //x√≥a actived c·ªßa c√°c n√∫t v√† kh√¥i ph·ª•c kh·∫£ nƒÉng click
    playerItem.forEach((_item) => {
        _item.classList.remove("actived");
        _item.style.pointerEvents = ""; //kh√¥i ph·ª•c s·ª± ki·ªán chu·ªôt
    });
    //x√≥a th√¥ng b√°o
    document.querySelector(".notification").innerHTML = "";
    //·∫©n n√∫t ch∆°i l·∫°i
    document.querySelector("#play-again").classList.add("d-none");
});